<% provide(:title, "Crop image") %>

<% base_widget_width = 138 %>
<% base_widget_height = 138 %>
<% initial_preview_w = base_widget_width * @content.grid_sizex %>
<% initial_preview_h = base_widget_height * @content.grid_sizey %>

<% content_for(:head) do %>
  <%= stylesheet_link_tag     "jquery.Jcrop.min" %>
  <%= javascript_include_tag  "jquery.Jcrop.min" %>
  <%= render "shared/gridster_link_tags" %>
  <%= stylesheet_link_tag     "mini_grid" %>
  <%= javascript_include_tag  "mini_grid" %>
  <script type="text/javascript" charset="utf-8">

    $(function(){
      var base_widget_width = <%= base_widget_width %>
      var base_widget_height = <%= base_widget_height %>
      var preview_w = <%= initial_preview_w %>;
      var preview_h = <%= initial_preview_h %>;

      function make_cropbox(){
        $("#cropbox").Jcrop({
          onChange: update_crop,
          onSelect: update_crop,
          setSelect: [0, 0, preview_w, preview_h],
          aspectRatio: preview_w / preview_h
        });
      }

      function update_preview (rx, ry, coords){
        $('#preview').css({
          width: Math.round(rx * <%= @content.grid_tile_image_geometry(:large).width %>) + 'px',
          height: Math.round(ry * <%= @content.grid_tile_image_geometry(:large).height %>) + 'px',
          marginLeft: '-' + Math.round(rx * coords.x) + 'px',
          marginTop: '-' + Math.round(ry * coords.y) + 'px'
        });
      }

      make_cropbox();

      function update_crop(coords) {
        var rx = preview_w/coords.w;
        var ry = preview_h/coords.h;
        console.log("preview_w = " + preview_w);
        console.log("preview_h = " + preview_h);
        console.log(coords);
        update_preview( rx, ry, coords );

        var ratio = <%= @content.grid_tile_image_geometry(:original).width %> / <%= @content.grid_tile_image_geometry(:large).width %>; 
        $('#crop_x').val(Math.floor(coords.x * ratio));
        $('#crop_y').val(Math.floor(coords.y * ratio));
        $('#crop_w').val(Math.floor(coords.w * ratio));
        $('#crop_h').val(Math.floor(coords.h * ratio));
      }


      $("form #edit_grid_sizex").change( function(){
        preview_w = base_widget_width * $(this).val();
        make_cropbox();
        $('#preview_div').css({width: preview_w});
      });

      $("form #edit_grid_sizey").change( function(){
        preview_h = base_widget_height * $(this).val();
        make_cropbox();
        $('#preview_div').css({height: preview_h});
      });
    });
  </script>
<% end %>


<h4>Preview</h4>
<%= image_tag @content.grid_tile_image.url(:large), id: "cropbox" %>


<%= form_for @content do |f| %>
  <!-- Form for cropping attributes -->
  <% for attribute in [:crop_x, :crop_y, :crop_w, :crop_h] %>
    <%= f.hidden_field attribute, id: attribute %>
  <% end %>

  <!-- Form for grid tile size -->
  <% for attribute in [{ :attribute_name => :grid_sizex, :label => "Tile Width - Horizontal" }, { :attribute_name => :grid_sizey, :label => "Tile Width - Vertical" }] %>
    <p>
      <%= f.label attribute[:attribute_name], attribute[:label] %>
      <%= f.number_field attribute[:attribute_name], min: 0, max: 3, step: 1, id: "edit_#{attribute[:attribute_name]}" %>
    </p>
  <% end %>

  <%= f.submit "Save", class: "btn btn-primary", 
                       id: "crop_popup_save" %>
<% end %>


<div id="preview_div" style="width: <%= initial_preview_w %>px; height: <%= initial_preview_h %>px; overflow: hidden;">
  <%= image_tag @content.grid_tile_image.url(:large), :id => "preview" %>
</div>

<div class="gridster">
  <ul>
    <%= render "shared/grid_tiles", :surpress_details => true, 
                                    :grid_for_cropping => true %>
  </ul>
</div>
